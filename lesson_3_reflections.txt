When would you want to use a remote repository rather than keeping all your work
local?

    I'd push my work to a remote repository when I'm sure that I have a stable
    working version of the project which I could go back to any time I want.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I might be doing something experimental in my local repository that is a
    variation of what is in my remote repository. If Git automatically pulls
    changes to my local repository, it may cause code conflicts, or worse, may
    override my local changes.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork creates a copy of the remote repository directly in GitHub and adds
    a link back to the source repository. Clone creates a copy of the remote
    repository in my local machine without any citation to the source
    repository, and I'll have to manually push the files to my remote on GitHub.
    Branch simply creates a branch within my working repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows me to fetch the remote changes to my local repository without
    actually affecting the master branch.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Dropbox, probably. Sharing might be easier, but collaboration would be harder.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Making changes in a branch helps test out "risky" code. Making changes in
    master helps avoid conflicts.
